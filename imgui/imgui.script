---@diagnostic disable: unused-local, global-element, lowercase-global
go.property("acquire_input_focus", true)

local LEFT_MOUSE = hash("mouse_button_left")
local MIDDLE_MOUSE = hash("mouse_button_middle")
local RIGHT_MOUSE = hash("mouse_button_right")
local WHEEL_UP = hash("mouse_wheel_up")
local WHEEL_DOWN = hash("mouse_wheel_down")
local TEXT = hash("text")
local KEY_SHIFT = hash("key_shift")
local KEY_CTRL = hash("key_ctrl")
local KEY_ALT = hash("key_alt")
local KEY_SUPER = hash("key_super")

function init(self)
	if self.acquire_input_focus then
		msg.post(".", "acquire_input_focus")
	end
end

function final(self)
	if self.acquire_input_focus then
		msg.post(".", "release_input_focus")
	end
end

function update(self, dt)
	local w, h = window.get_size()
	imgui.set_display_size(w, h)
end

local IMGUI_KEYS = {
	[hash("key_tab")] = imgui.KEY_TAB,
	[hash("key_left")] = imgui.KEY_LEFTARROW,
	[hash("key_right")] = imgui.KEY_RIGHTARROW,
	[hash("key_up")] = imgui.KEY_UPARROW,
	[hash("key_down")] = imgui.KEY_DOWNARROW,
	[hash("key_pageup")] = imgui.KEY_PAGEUP,
	[hash("key_pagedown")] = imgui.KEY_PAGEDOWN,
	[hash("key_home")] = imgui.KEY_HOME,
	[hash("key_end")] = imgui.KEY_END,
	[hash("key_insert")] = imgui.KEY_INSERT,
	[hash("key_delete")] = imgui.KEY_DELETE,
	[hash("key_backspace")] = imgui.KEY_BACKSPACE,
	[hash("key_space")] = imgui.KEY_SPACE,
	[hash("key_enter")] = imgui.KEY_ENTER,
	[hash("key_esc")] = imgui.KEY_ESCAPE,
	[hash("key_numpad_enter")] = imgui.KEY_KEYPADENTER,
	[hash("key_a")] = imgui.KEY_A,
	[hash("key_c")] = imgui.KEY_C,
	[hash("key_v")] = imgui.KEY_V,
	[hash("key_x")] = imgui.KEY_X,
	[hash("key_y")] = imgui.KEY_Y,
	[hash("key_z")] = imgui.KEY_Z,
}


function on_input(self, action_id, action)
	if action_id == LEFT_MOUSE then
		if action.pressed then
			imgui.set_mouse_button(imgui.MOUSEBUTTON_LEFT, 1)
		elseif action.released then
			imgui.set_mouse_button(imgui.MOUSEBUTTON_LEFT, 0)
		end
	elseif action_id == MIDDLE_MOUSE then
		if action.pressed then
			imgui.set_mouse_button(imgui.MOUSEBUTTON_MIDDLE, 1)
		elseif action.released then
			imgui.set_mouse_button(imgui.MOUSEBUTTON_MIDDLE, 0)
		end
	elseif action_id == RIGHT_MOUSE then
		if action.pressed then
			imgui.set_mouse_button(imgui.MOUSEBUTTON_RIGHT, 1)
		elseif action.released then
			imgui.set_mouse_button(imgui.MOUSEBUTTON_RIGHT, 0)
		end
	elseif action_id == WHEEL_UP then
		imgui.set_mouse_wheel(action.value)
	elseif action_id == WHEEL_DOWN then
		imgui.set_mouse_wheel(-action.value)
	elseif action_id == TEXT then
		imgui.add_input_character(action.text)
	elseif action_id == KEY_SHIFT then
		if action.pressed or action.released then
			imgui.set_key_modifier_shift(action.pressed == true)
		end
	elseif action_id == KEY_CTRL then
		if action.pressed or action.released then
			imgui.set_key_modifier_ctrl(action.pressed == true)
		end
	elseif action_id == KEY_ALT then
		if action.pressed or action.released then
			imgui.set_key_modifier_alt(action.pressed == true)
		end
	elseif action_id == KEY_SUPER then
		if action.pressed or action.released then
			imgui.set_key_modifier_super(action.pressed == true)
		end
	else
		if action.pressed or action.released then
			local key = IMGUI_KEYS[action_id]
			if key then
				imgui.set_key_down(key, action.pressed == true)
			end
		end
	end

	if not action_id then
		local w, h = window.get_size()
		local x = action.screen_x
		local y = h - action.screen_y
		imgui.set_mouse_pos(x, y)
	end
end
